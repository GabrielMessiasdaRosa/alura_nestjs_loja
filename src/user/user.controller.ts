import { Body, Controller, Get, Post } from "@nestjs/common";
import { UserService } from "./user.service";
import { CreateUserDto } from "./dto/create-user.dto";
import { UserEntity } from "./user.entity";
import { v4 as uuid } from "uuid";
@Controller("/users") // ðŸ‘ˆ Route path @Controller is a decorator that defines a controller that will handle requests for a specific route path.
export class UserController {
   /*  private userService = new UserService(); */ // ðŸ‘ˆ Create an instance of the UserService class

    constructor(private userService: UserService) {} // ðŸ‘ˆ Dependency injection in the constructor to inject the UserService instance into the UserController class.

    @Post() // ðŸ‘ˆ Route handler @Post is a decorator that defines a route handler for POST requests to the route path defined by the @Controller decorator. 
    async createUser(@Body() body: CreateUserDto) { // ðŸ‘ˆ Route handler method that accepts a CreateUserDto object as the request body.
        // create user
        const userEntity = new UserEntity(); // ðŸ‘ˆ Create an instance of the UserEntity class

        userEntity.name = body.name; // ðŸ‘ˆ Set the name property of the userEntity object to the name property of the CreateUserDto object
        userEntity.email = body.email; // ðŸ‘ˆ Set the email property of the userEntity object to the email property of the CreateUserDto object
        userEntity.password = body.password; // ðŸ‘ˆ Set the password property of the userEntity object to the password property of the CreateUserDto object
        userEntity.id = uuid(); // ðŸ‘ˆ Set the id property of the userEntity object to a unique id generated by the uuid package

        this.userService.createUser(userEntity);
        return { // ðŸ‘ˆ return user object;
            id: userEntity.id,
            message: "User created successfully",
        } 
    }

    @Get()
    async getUsers() {
        // get users
        return this.userService.getUsers(); // ðŸ‘ˆ Response 
    }

}
